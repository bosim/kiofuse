TODO
-----

- Ask Carewolf why FileJob::data() gets called twice (second time carrying an empty array) for each ::read() request and why ::position() gets called twice for each ::seek(). About every three ::read() requests, the ::data() signal is not called at all.

- Also, ask Carewolf whether the KJob::result signal is used.

- Convert KIO errors to POSIX errors

- Make sure to remember the owners of the handles.

- Don't delete a handle with a fh.

- Find out why the baseUrl has to be a file (as opposed to a directory)

- Find out if the parent directory is ever stat-ed (ie. the relPath in kioFuseGetAttr is ever ".."). If so, we need to get its info using lstat().

- Find out how to make mounts created by one user accessible to other users. The "allow_others" FUSE option might work.

- Find a Qt or KDE-based method of caching KFileItem objects in a FS tree.

- Can a subdirectory of a FUSE mounpoint be a mountpoint itself?

- Implement periodic removal of cashed items that have expired.

- Implement the interface for extracting file/directory information from the cache.

- Fix CMakeLists.txt so that FUSE is only linked to kiofuse.h and not to all the other source files. Currently, the following warning appears for the other files:
        c++: -lfuse: linker input file unused because linking not done
 
- Implement more filesystem operations in kiofuseops.h

- Make KIO aware of KioFuse mountpoints so that it doesn't use them, but uses KIO slaves directly. Libfusi (http://www.scheinwelt.at/~norbertf/devel/fusi) would come in handy for keeping track of mountpoints and converting local paths <---> remote paths.

- Integrate KioFuse into the KNetAttach GUI.

- write documentation


Long-term TODO:

- Make permission checking in KIO reliable for network slaves. For example, KFileItem::isWritable() should check the /etc/group file on the remote server to ensure that the user we are connecting with is a member of a group that has write permission. This will allow KioFuse to display the effective permission on the client side (currently KioFuse just copies the remote stat, which is not applicable to the local system).

- KIO should be usable from non-main threads

- Fix inconsistancy whereby ListJob returns its UDSEntries via the entries() signal, while StatJob returns its UDSEntries via the statResult() function

- Take ideas from GVFS and GIO

Contact
--------

Vlad Codrea, VladC6 yahoo com
